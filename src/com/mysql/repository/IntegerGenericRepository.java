package com.mysql.repository;

import com.mysql.config.DataSource;
import com.mysql.converter.jdbc.insert.InsertJdbcConverter;
import com.mysql.converter.jdbc.remove.RemoveJdbcConverter;
import com.mysql.converter.jdbc.update.UpdateJdbcConverter;
import com.mysql.entity.IdEntity;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Objects;

public abstract class IntegerGenericRepository<E extends IdEntity> extends GenericRepository<E, Integer> {

    public IntegerGenericRepository(
            String tableName,
            String fieldId,
            DataSource dataSource,
            InsertJdbcConverter insertJdbcConverter,
            UpdateJdbcConverter updateJdbcConverter,
            RemoveJdbcConverter removeJdbcConverter) {
        super(tableName, fieldId, dataSource, insertJdbcConverter, updateJdbcConverter, removeJdbcConverter);
    }

    @Override
    protected int getAutoGeneratedKeys() {
        return Statement.RETURN_GENERATED_KEYS;
    }

    @Override
    protected void populateId(Statement statement, E entity) {
        ResultSet resultSet = null;
        try {
            resultSet = statement.getGeneratedKeys();
            resultSet.next();
            int id = resultSet.getInt(1);
            entity.setId(id);
        } catch (SQLException e) {
            throw new RuntimeException(e);
        } finally {
            close(resultSet);
        }
    }

    @Override
    protected Integer getId(E entity) {
        if (Objects.isNull(entity.getId())) {
            throw new IllegalStateException("Id is not found");
        }
        return entity.getId();
    }
}
